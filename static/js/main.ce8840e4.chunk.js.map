{"version":3,"sources":["components/Note/Note.component.jsx","components/AddNote/AddNote.component.jsx","components/NoteList/NoteList.component.jsx","components/SearchNote/SearchNote.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Note","id","text","date","deleteNote","className","onClick","size","AddNote","handleAddNote","useState","noteText","setNoteText","name","rows","cols","value","placeholder","onChange","event","preventDefault","todo","target","length","trim","NoteList","notes","map","otherprops","nanoid","SearchNote","handleSearch","type","toLowerCase","App","setNotes","searchText","setsearchText","toggleMode","SettoggleMode","useEffect","savedNotes","JSON","parse","localStorage","getItem","setItem","stringify","filter","includes","Date","newNote","toLocaleDateString","prevState","newDeleteNote","note","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ce8840e4.chunk.js","sourcesContent":["import React from 'react';\nimport {AiTwotoneDelete} from 'react-icons/ai';\nimport './Note.styles.css';\n\nfunction Note({id, text, date, deleteNote }){\n    return (\n        <div className='note'>\n            <p>{text}</p>\n            <div className='note-footer'>\n                <small>{date}</small>\n                <AiTwotoneDelete onClick={() => deleteNote(id)} className='delete-icon' size='1.3rem'/>\n            </div>\n        </div>\n    )\n}\n\n\n\nexport default Note;","import React, {useState} from \"react\";\nimport './AddNote.styles.css';\n\nfunction AddNote({handleAddNote}) {\n\n  const letterMax = 200;\n  \n  const [noteText, setNoteText] = useState('');\n\n  const GrabNote = (event) => {\n    event.preventDefault()  \n    const todo = event.target.value;\n    \n    if (letterMax - todo.length >=0 && todo.length <= 200){\n        setNoteText(todo);\n    }    \n  }\n  \n  const handleSubmit = () => {\n    \n    if(noteText.trim().length > 0){\n      handleAddNote(noteText);\n      setNoteText('');\n    }\n  }\n\n  return (\n    <div className='note addnote'>\n      <textarea\n        name=\"todo\"\n        rows=\"8\"\n        cols=\"10\"\n        value={noteText}\n        placeholder=\"Type to add a note...\"\n        onChange={GrabNote}\n      ></textarea>\n      <div className='note-footer'>\n        <small className='note-footer-small'>Characters left: {letterMax - noteText.length}</small>\n        <button className=\"save\" onClick={handleSubmit}>Save</button>\n      </div>\n    </div>\n  );\n}\n\nexport default AddNote;\n","import React from \"react\";\nimport Note from \"../Note/Note.component\";\nimport AddNote from '../AddNote/AddNote.component';\nimport { nanoid } from \"nanoid\";\nimport \"./NoteList.styles.css\";\n\nfunction NoteList({ notes, handleAddNote, deleteNote }) {\n  return (\n    <div className=\"note-list\">\n      {notes.map(({...otherprops}) => (\n        <Note key={nanoid()} {...otherprops} deleteNote={deleteNote} />\n      ))}\n      <AddNote handleAddNote={handleAddNote}/>\n    </div>\n  );\n}\n\nexport default NoteList;\n","import React from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport \"./SearchNote.styles.css\";\n\nfunction SearchNote({handleSearch}) {\n\n  const addSearchText = (event)=>{\n    const text = event.target.value;\n    handleSearch(text.trim().toLowerCase())\n  }\n\n  return (\n    <div className=\"search\">\n      <MdSearch className=\"search-icon\" size=\"1.3em\" />\n      <input name=\"search\" type=\"search\" onChange={addSearchText} placeholder='Search your notes...'/>\n    </div>\n  );\n}\n\nexport default SearchNote;\n","import React, { useState, useEffect } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport \"./App.css\";\nimport NoteList from \"./components/NoteList/NoteList.component\";\nimport SearchNote from \"./components/SearchNote/SearchNote.component\";\n\nfunction App() {\n  const [notes, setNotes] = useState([]);\n\n  const [searchText, setsearchText] = useState(\"\");\n  const [toggleMode, SettoggleMode] = useState(false);\n\n  const handleAddNote = (text) => {\n    const date = new Date();\n\n    const newNote = {\n      id: nanoid(),\n      text: text,\n      date: date.toLocaleDateString(),\n    };\n\n    setNotes((prevState) => [...prevState, newNote]);\n  };\n\n  const deleteNote = (id) => {\n    const newDeleteNote = notes.filter((note) => note.id !== id);\n    setNotes(newDeleteNote);\n  };\n\n  const handleSearch = (text) => {\n    setsearchText(text);\n  };\n\n  useEffect(\n    () => {\n      const savedNotes = JSON.parse(localStorage.getItem('post-it-note'));\n      \n      if (savedNotes){\n        setNotes(savedNotes);\n      }\n    }\n    , []\n  )\n  useEffect(\n    () => {\n      localStorage.setItem('post-it-note', JSON.stringify(notes))\n    }\n    , [notes]\n  )\n\n  return (\n    <div className={`${toggleMode && \"darkmode\"}`}>\n      <div className=\"App\">\n        <div className=\"header\">\n          <h1>Just Do it!</h1>\n          <button\n            className=\"save\"\n            onClick={() => SettoggleMode(!toggleMode)}\n            size=\"1.8em\"\n          >\n            Toggle Mode\n          </button>\n        </div>\n        <SearchNote handleSearch={handleSearch} />\n        <NoteList\n          notes={notes.filter(({ text }) =>\n            text.toLowerCase().includes(searchText)\n          )}\n          handleAddNote={handleAddNote}\n          deleteNote={deleteNote}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}